// <auto-generated />
using System;
using Khan.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Khan.EntityFrameworkCore.Migrations
{
    [DbContext(typeof(Khontext))]
    partial class KhontextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("KhanPortal")
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Khan.Common.Entities.RoleEntity", b =>
                {
                    b.Property<Guid>("RoleId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(150)")
                        .HasMaxLength(150);

                    b.HasKey("RoleId");

                    b.ToTable("RoleEntity");

                    b.HasData(
                        new { RoleId = new Guid("f2b14e6e-e3b2-47a7-9169-5e4c504eb503"), CreatedDate = new DateTime(2018, 12, 3, 20, 31, 51, 993, DateTimeKind.Local), Deleted = false, Level = 99, Name = "Super Admin" },
                        new { RoleId = new Guid("75b50614-d668-4949-af86-390affd41939"), CreatedDate = new DateTime(2018, 12, 3, 20, 31, 51, 993, DateTimeKind.Local), Deleted = false, Level = 10, Name = "User" }
                    );
                });

            modelBuilder.Entity("Khan.Common.Entities.UserEntity", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("varchar(150)")
                        .HasMaxLength(50);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("varchar(150)")
                        .HasMaxLength(50);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<Guid>("RoleId");

                    b.HasKey("UserId");

                    b.HasIndex("RoleId")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new { UserId = new Guid("863a9cbd-b409-40cb-88f6-6d842c2358c6"), Active = true, CreatedDate = new DateTime(2018, 12, 3, 20, 31, 52, 0, DateTimeKind.Local), Deleted = false, Email = "diegosanches89@gmail.com", FirstName = "Diego", LastName = "Modesto", Password = "@123mudar", RoleId = new Guid("f2b14e6e-e3b2-47a7-9169-5e4c504eb503") },
                        new { UserId = new Guid("818f82ee-6b33-482f-8848-37000d9a6234"), Active = true, CreatedDate = new DateTime(2018, 12, 3, 20, 31, 52, 0, DateTimeKind.Local), Deleted = false, Email = "teste1@teste.com", FirstName = "Francisco", LastName = "Almeida", Password = "@123mudar", RoleId = new Guid("75b50614-d668-4949-af86-390affd41939") },
                        new { UserId = new Guid("8b1de340-da5f-4fa7-be5e-c2d3f6f26010"), Active = false, CreatedDate = new DateTime(2018, 12, 3, 20, 31, 52, 0, DateTimeKind.Local), Deleted = false, Email = "teste2@teste.com", FirstName = "Roberto", LastName = "Machado de Castro", Password = "@123mudar", RoleId = new Guid("75b50614-d668-4949-af86-390affd41939") }
                    );
                });

            modelBuilder.Entity("Khan.Common.Entities.UserEntity", b =>
                {
                    b.HasOne("Khan.Common.Entities.RoleEntity", "Role")
                        .WithOne("User")
                        .HasForeignKey("Khan.Common.Entities.UserEntity", "RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
